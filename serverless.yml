frameworkVersion: '3'
useDotenv: true

service: agriwebb-marketplace-sample-app

plugins:
  - serverless-plugin-datadog
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    sourcemap: true
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002
    websocketPort: 4001
  datadog:
    apiKeySecretArn: ${ssm:/infrastructure/datadog/datadogSecretArn}

provider:
  name: aws
  runtime: nodejs16.x
  timeout: 30
  region: ap-southeast-2
  environment:
    OAUTH_SERVER_AUTHORIZE_URL: https://${env:OAUTH_DOMAIN_NAME}/oauth2/authorize
    OAUTH_SERVER_TOKEN_URL: https://${env:OAUTH_DOMAIN_NAME}/oauth2/token
    USERS_TABLE_NAME: !Ref UsersTable
    INTEGRATION_TABLE_NAME: !Ref IntegrationTable
    ACCESS_TOKEN_TABLE_NAME: !Ref AccessTokenTable
    REFRESH_TOKEN_TABLE_NAME: !Ref RefreshTokenTable
    BASE_URL: https://${env:DOMAIN_NAME}/
    AGRIWEBB_GRAPHQL_URI: https://${env:API_DOMAIN_NAME}/v2
    AGRIWEBB_MARKETPLACE_CALLBACK_URI: https://${env:API_DOMAIN_NAME}/v2/marketplace/callback
    AGRIWEBB_DOCUMENTATION_URI: https://${env:DOCS_DOMAIN_NAME}/
    AGRIWEBB_MARKETPLACE_HOMEPAGE_URI: https://${env:APP_DOMAIN_NAME}/accounts/marketplace/

  iam:
    role:
      name: aw-marketplace-sample-${sls:stage}
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:UpdateItem
          Resource: !GetAtt
            - UsersTable
            - Arn
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !GetAtt
            - IntegrationTable
            - Arn
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !GetAtt
            - AccessTokenTable
            - Arn
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !GetAtt
            - RefreshTokenTable
            - Arn
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: marketplace-sample-app/*
        # Permission for Datadog
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: ${ssm:/infrastructure/datadog/datadogSecretArn}

package:
  individually: true

functions:
  ServerGetLogin:
    handler: src/server/handle-login.handleGetLoginRequest
    events:
      - http:
          method: GET
          path: /login

  ServerGetLogout:
    handler: src/server/handle-logout.handleGetLogoutRequest
    events:
      - http:
          method: GET
          path: /logout

  ServerPostLogin:
    handler: src/server/handle-login.handlePostLoginRequest
    events:
      - http:
          method: POST
          path: /login

  ServerHome:
    handler: src/server/handle-home.handleHomeRequest
    events:
      - http:
          method: GET
          path: /

  ServerCredentials:
    handler: src/server/handle-credentials.handleCredentialsRequest
    events:
      - http:
          method: GET
          path: /credentials

  ServerFarmList:
    handler: src/server/handle-farm-list.handleFarmListRequest
    events:
      - http:
          method: GET
          path: /farms

  OAuth2Install:
    handler: src/oauth2/handle-install.handleInstallRequest
    events:
      - http:
          method: GET
          path: /install

  OAuth2Callback:
    handler: src/oauth2/handle-callback.handleCallbackRequest
    events:
      - http:
          method: GET
          path: /callback

resources:
  Resources:
    DomainName:
      Type: AWS::ApiGateway::DomainName
      Properties:
        DomainName: ${env:DOMAIN_NAME}
        EndpointConfiguration:
          Types:
            - REGIONAL
        SecurityPolicy: TLS_1_2
        RegionalCertificateArn: ${ssm:/infrastructure/network/ioCertificateArn}

    RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: ${ssm:/infrastructure/network/ioZoneId}
        Name: ${env:DOMAIN_NAME}
        Type: CNAME
        TTL: 60
        ResourceRecords:
          - Fn::GetAtt:
              - DomainName
              - RegionalDomainName

    BasePathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        DomainName: ${env:DOMAIN_NAME}
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: ${sls:stage}
      DependsOn:
        - DomainName
        - 'ApiGatewayDeployment${sls:instanceId}'

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          # - AttributeName: integrationId
          #   AttributeType: S
          # - AttributeName: expiresIn
          #   AttributeType: N
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: expiresIn
          Enabled: true

    IntegrationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: integrationId
            AttributeType: S
          # - AttributeName: allowedFarmIds
          #   AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: integrationId
            KeyType: HASH

    AccessTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: integrationId
            AttributeType: S
          # - AttributeName: tokenType
          #   AttributeType: S
          # - AttributeName: accessToken
          #   AttributeType: S
          # - AttributeName: expiresIn
          #   AttributeType: N
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: integrationId
            KeyType: HASH
        SSESpecification:
          SSEEnabled: true
        TimeToLiveSpecification:
          AttributeName: expiresIn
          Enabled: true

    RefreshTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: integrationId
            AttributeType: S
          # - AttributeName: refreshToken
          #   AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: integrationId
            KeyType: HASH
        SSESpecification:
          SSEEnabled: true
